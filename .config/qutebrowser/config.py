## Autogenerated config.py
## Documentation:
##   qute://help/configuring.html
##   qute://help/settings.html

# Load settings added with ui
config.load_autoconfig()

# Dracula theme
# https://github.com/evannagle/qutebrowser-dracula-theme
import dracula
dracula.blood(c, {'font': {'size': 10}})

## Aliases for commands
c.aliases = {
    'adblock-toggle': 'config-cycle -t content.blocking.enabled',
    'chromium': 'spawn --detach chromium {url}',
    'throrium': 'spawn --detach throrium-browser {url}',
    'firefox': 'spawn --detach firefox {url}',
    'incognito': 'open --private',
    'lastpass': 'hint --first inputs ;; spawn --userscript qute-lastpass',
    'mpv': 'spawn --detach mpv {url}',
    'o': 'open',
    'q': 'quit',
    'qrcode': 'spawn st -e watch --color -t -x qrcode-terminal "{url}"'
}

# Backend to use to display websites. 
c.backend = 'webengine'

# Fix for crashes
c.qt.workarounds.remove_service_workers = True

# Set colors for the completion widget
c.colors.completion.category.fg = '#ff79c6'
c.colors.completion.scrollbar.fg = '#6272a4'
c.colors.hints.bg = 'yellow'
c.colors.hints.fg = 'black'
c.colors.hints.match.fg = '#bd93f9'
c.colors.keyhint.fg = '#FFFFFF'
c.colors.keyhint.suffix.fg = '#f1fa8c'
c.colors.statusbar.command.fg = '#f1fa8c'
c.colors.statusbar.insert.bg = '#ff79c6'
c.colors.statusbar.private.bg = '#ff5555'
c.colors.statusbar.progress.bg = '#6272a4'
c.colors.statusbar.url.fg = 'white'
c.colors.statusbar.url.success.http.fg = 'white'
c.colors.statusbar.url.success.https.fg = 'white'
c.tabs.background = True
c.tabs.show = 'multiple'
c.tabs.title.format = '{audio} {current_title}'

# Editor configuration
c.editor.command = ["st", "-e", "vim", "{file}"]

# Default font settings
c.fonts.default_family = ['Iosevka Nerd Font', 'Courier', 'Liberation Mono', 'monospace', 'Fixed', 'Consolas', 'Terminal']
c.fonts.default_size = '10pt'

# Disable notifications
if type(c.content.notifications) == str:
    c.content.notifications = False
else:
    c.content.notifications.enabled = False

# Set default page and start page to Google
c.url.default_page = 'https://www.google.com'
c.url.start_pages = ['https://www.google.com']

# Search engines configuration
c.url.searchengines = {
    '?': 'https://chatgpt.com{}',
    '?amazon': 'https://www.amazon.de/s?k={}',
    '?aur': 'https://aur.archlinux.org/packages/?SB=p&SO=d&O=0&K={}',
    '?dd': 'https://duckduckgo.com/?q={}',
    '?giphy': 'https://giphy.com/search/{}',
    '?github': 'https://github.com/search?type=Repositories&q={}',
    '?githubhaskell': 'https://github.com/search?l=haskell&type=Code&q={}',
    '?githubpurescript': 'https://github.com/search?l=purescript&type=Code&q={}',
    '?hackage': 'https://hackage.haskell.org/packages/search?terms={}',
    '?hoogle': 'https://hoogle.haskell.org/?hoogle={}',
    '?nix': 'https://search.nixos.org/packages?query={}',
    '?npm': 'https://www.npmjs.com/search?q={}',
    '?purs': 'https://pursuit.purescript.org/search?q={}',
    '?youtube': 'https://www.youtube.com/results?search_query={}',
    '?yt': 'https://www.youtube.com/results?search_query={}',
    'DEFAULT': 'https://bing.com/search?q={}'
}

# Scrolling configuration
c.scrolling.bar = 'when-searching'
c.scrolling.smooth = False

# Autocomplete hints
c.hints.auto_follow = 'always'
c.input.insert_mode.auto_load = True
c.input.insert_mode.leave_on_load = True

c.content.autoplay = True

# Keybindings configuration
c.bindings.commands = {
    'normal': {
        '+': 'zoom-in',
        ',<Space>': 'search',
        ',C': 'tab-only',
        ',M': 'hint links spawn --detach mpv {hint-url}',
        ',b': 'set-cmd-text -s :buffer',
        ',c': 'tab-close',
        ',e': 'set-cmd-text -s :open',
        ',h': 'history',
        ',m': 'spawn --detach mpv {url}',
        ',q': 'tab-prev',
        ',w': 'tab-next',
        '-': 'zoom-out',
        '<Alt-D>': 'edit-url',
        '<Ctrl-+>': 'zoom-in',
        '<Ctrl-->': 'zoom-out',
        '<Ctrl-0>': 'zoom',
        '<Ctrl-Shift-Tab>': 'tab-prev',
        '<Ctrl-Tab>': 'tab-next',
        '<Ctrl-f>': 'set-cmd-text /',
        '<Ctrl-i>': 'forward',
        '<Ctrl-o>': 'back',
        '<Ctrl-p>': 'lastpass',
        '<Ctrl-a>': 'mode-enter passthrough',
        '=': 'zoom',
        '?': 'set-cmd-text :open -t ?',
        'F': 'hint links tab-bg',
        'gi': 'hint inputs'
    }
}
